{"version":3,"sources":["reducers/reducers.js","presentation/Dropdown.js","container/Criteria.js","actions/SearchActions.js","container/SearchContainer.js","presentation/Navbar.js","actions/ProfileActions.js","presentation/ProfileForm.js","presentation/Like.js","presentation/Playback.js","presentation/Recommendation.js","container/Profile.js","presentation/ProfileContainer.js","presentation/WelcomePanel.js","container/ProfilePage.js","container/App.js","serviceWorker.js","index.js"],"names":["reducers","combineReducers","searchResults","state","arguments","length","undefined","action","type","result","error","profile","showProfile","profileID","profileInfo","loggedIn","searchCategory","category","profileName","name","email","PureComponent","Criteria","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","controller","AbortController","returnItems","info","values","keys","map","artist","returnItemObject","track","key","item","imgURL","images","slice","url","popularity","genres","join","spotifyID","id","album","artists","itemList","copy","react_default","a","createElement","onClick","selectListItem","className","src","height","width","renderItemList","e","target","tagName","parentElement","results","items","filter","props","saveSearch","searchData","storeSearch","setState","saved","renderResult","render","_this2","fetch","concat","text","signal","then","resp","json","catch","body","abort","renderedResult","Jumbotron","Component","connect","dispatch","searchResult","data","method","headers","Content-Type","JSON","stringify","spotifyURL","external_urls","spotify","SearchContainer","handleSearchInput","event","objectSpread","search","value","handleTypeSelect","innerHTML","toLowerCase","buttons","defineProperty","saveCategory","showAlert","Alert","bsStyle","setAlert","showForm","Fragment","searchText","placeholder","onChange","reshowForm","showResult","container_Criteria","bind","assertThisInitialized","renderSearchResult","Row","getProfile","Link","to","MusicNavbar","_ref","Navbar","inverse","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","NavItem","eventKey","href","pullRight","receiveError","ProfileForm","handleSubmit","submit","handleChange","spotifyAuth","Form","inline","FormGroup","controlId","ControlLabel","FormControl","Button","Like","saveLike","bsSize","Glyphicon","glyph","Playback","showPreviousTrack","showNextTrack","Recommendation","rec","iframeSRC","presentation_Playback","frameBorder","allowTransparency","allow","presentation_Like","Profile","iframeID","recIndex","uri","split","presentation_Recommendation","fetchRecommend","handleFetch","showRec","trackSpotifyID","like","submitSignIn","saveProfile","ProfileForm_ProfileForm","trackID","fetchData","saveProfileInfo","ProfileContainer","container_Profile","Welcome","ProfilePage","tracks","signIn","spotify_url","App","trackIDs","artistIDs","keyword","push","createProfile","renderSearch","BrowserRouter","presentation_Navbar","Route","exact","path","routeProps","container_SearchContainer","assign","presentation_ProfileContainer","container_ProfilePage","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","container_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47307ed3.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\n\nfunction searchReducer(state={}, action) {\n  switch (action.type) {\n    case 'saveSearch':\n      return action.result\n    default:\n      return state;\n  }\n}\n\nfunction errorReducer(state='', action) {\n  switch (action.type) {\n    case 'error':\n      return action.error\n    default:\n      return state;\n  }\n}\n\nfunction profileIDReducer(state={showProfile: false, profileID: ''}, action) {\n  switch(action.type) {\n    case 'createProfile':\n      return {\n        showProfile: true,\n        profileID: action.profileID\n      }\n    default:\n      return state\n  }\n}\n\n//get profile likes when ProfilePage mounts\nfunction profileInfoReducer(state = {loggedIn: false}, action) {\n  switch (action.type) {\n    case 'signIn':\n      return {\n        loggedIn: true\n      }\n    default:\n      return state\n  }\n}\n\nfunction categoryReducer(state=\"track\", action) {\n  switch (action.type) {\n    case 'saveCategory':\n      return action.category;\n    default:\n      return state;\n  }\n}\n\n//when user sign up / log in with form; save user name and email to store\nfunction profileNameReducer(state={}, action) {\n  switch (action.type) {\n    case 'saveName':\n      return {\n        name: action.name,\n        email: action.email\n      }\n    default:\n      return state\n  }\n}\n\nconst reducers = combineReducers({\n  searchResults: searchReducer,\n  error: errorReducer,\n  profile: profileIDReducer,\n  profileInfo: profileInfoReducer,\n  searchCategory: categoryReducer,\n  profileName: profileNameReducer\n})\n\nexport default reducers\n","import React, { PureComponent } from 'react';\nimport { ButtonToolbar, Dropdown, MenuItem, Button } from 'react-bootstrap';\n\nclass DropdownButton extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      button: 'Select Category'\n    }\n  }\n\n  handleSelect = (eventKey, event) =>\n    this.props.handleSelect(event)\n\n  toggleDrop = (eventKey, event) => {\n    this.setState({\n      button: event.target.innerHTML\n    })\n  }\n\n\n  render() {\n    return (\n      <ButtonToolbar>\n        <Dropdown id=\"searchDropdown\" onSelect={this.toggleDrop}>\n          <Button bsStyle='info' id=\"button-1\">{this.state.button}</Button>\n          <Dropdown.Toggle />\n          <Dropdown.Menu>\n            {this.props.menuItems.map((item, i) =>\n              <MenuItem key={i} eventKey={i} onSelect={this.handleSelect}\n              value={item}>\n                {item}\n              </MenuItem>\n            )}\n          </Dropdown.Menu>\n        </Dropdown>\n      </ButtonToolbar>\n    )\n  }\n}\n\nexport default DropdownButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Jumbotron, ListGroup, ListGroupItem, Button } from 'react-bootstrap'\nimport { storeSearch, saveSearch } from '../actions/SearchActions'\n\n\nclass Criteria extends Component {\n  constructor() {\n    super();\n    this.state = {\n      render: false,\n      saved: false,\n      searchResults: {},\n      error: ''\n    }\n  }\n\n  //https://developer.mozilla.org/en-US/docs/Web/API/AbortController\n  controller = new AbortController();\n\n  componentDidUpdate() {\n    if(!this.state.saved) {\n      const searchData = this.props.searchData\n      fetch(`/api/spotify/search?q=${searchData.text}&type=${searchData.type}`,\n      {signal: this.controller.signal})\n      .then(resp => resp.json()).then(json =>\n        this.setState({\n          searchResults: json,\n          render: true\n        }))\n        .catch(error => this.setState({\n          error: error.body\n      }))\n    }\n  }\n\n  componentWillUnmount() {\n    this.controller.abort();\n  }\n\n  //organize data into desirable format according to search type\n  returnItems = (result) => {\n    let info = Object.values(result)[0]['items']\n    if (Object.keys(result)[0] === 'artists') {\n      return info.map(artist => this.returnItemObject('artist', artist))\n    } else if (Object.keys(result)[0] === 'tracks') {\n      return info.map(track => this.returnItemObject('track', track))\n    }\n  }\n\n  returnItemObject = (key, item) => {\n    if(key === 'artist') {\n      return ({\n        imgURL: item.images.length > 0 ? item.images.slice(-1)[0].url : null,\n        name: item.name,\n        popularity: item.popularity,\n        genres: item.genres.join(', '),\n        spotifyID: item.id\n      })\n    } else if (key === 'track') {\n      return {\n        imgURL: item.album.images.length > 0 ? item.album.images.slice(-1)[0].url : null,\n        name: item.name,\n        artist: item.artists[0].name,\n        popularity: item.popularity,\n        spotifyID: item.id\n      }\n    } else {\n      return null;\n    }\n  }\n\n  itemList = (item) => {\n    let copy = item;\n    return (\n      <button id={copy.spotifyID} onClick={this.selectListItem} className=\"list-group-item\">\n        {delete copy.spotifyID}\n        {Object.keys(copy).map(key =>\n          key !== 'imgURL' ? <span>{key} - {copy[key]} &nbsp;</span> : <img src={copy[key]} height=\"42\" width=\"42\" />\n        )}\n      </button>\n    )\n  }\n\n  renderItemList = (result) => {\n    const items = this.returnItems(result)\n    return(items.map((item) => this.itemList(item)))\n  }\n\n  //save selected search to store\n  selectListItem = (e) => {\n    let result;\n    let spotifyID;\n    e.target.tagName !== 'BUTTON' ? spotifyID = e.target.parentElement.id : spotifyID = e.target.id;\n    let results = this.state.searchResults;\n    result = Object.values(results)[0].items.filter(result => result.id === spotifyID)[0]\n    this.props.saveSearch(result, this.props.searchData.type)\n    this.props.storeSearch(result)\n    this.setState({\n      saved: true\n    })\n  }\n\n  renderResult = (result) => {\n    if(Object.values(result)[0].items.length !== 0) {\n      return (\n        <div className=\"list-group\">\n          {this.renderItemList(result)}\n        </div>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    let renderedResult;\n    if(this.state.render && !this.state.saved) {\n      renderedResult = this.renderResult(this.state.searchResults)\n    } else if (this.state.saved) {\n      let result = this.props.searchResults\n      renderedResult = this.itemList(\n        this.returnItemObject(\n          this.props.category, this.props.searchResults\n        ))\n    } else {\n      renderedResult = null\n    }\n    return (\n      <Jumbotron>\n        {renderedResult}\n      </Jumbotron>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchResults: state.searchResults,\n    category: state.searchCategory\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveSearch: (searchResult, type) =>\n      dispatch(saveSearch(searchResult, type)),\n    storeSearch: (searchResult) => dispatch(storeSearch(searchResult))\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Criteria);\n","function receiveSearch(searchData) {\n  return {\n    type: 'receiveSearch',\n    result: searchData,\n  }\n}\n\nfunction receiveError(error) {\n  return {\n    type: 'error',\n    error: error\n  }\n}\n\nexport function storeSearch(searchResult) {\n  return {\n    type: 'saveSearch',\n    result: searchResult,\n  }\n}\n\nexport function saveCategory(category) {\n  return {\n    type: 'saveCategory',\n    category: category\n  }\n}\n\nexport function saveSearch(searchResult, type) {\n  const data = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({\n      spotifyID: searchResult.id,\n      name: searchResult.name,\n      spotifyURL: searchResult.external_urls.spotify,\n      type: type\n    })\n  }\n  return function(dispatch) {\n    fetch('/api/spotify/save', data)\n  }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Dropdown from '../presentation/Dropdown'\nimport Criteria from './Criteria';\nimport { Row, Jumbotron, Alert, Button } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport '../css/Search.css'\nimport { saveCategory } from '../actions/SearchActions'\n\nclass SearchContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: {\n        text: '',\n        type: 'track',\n      },\n      showForm: true,\n      showAlert: false,\n      buttons: {\n        artist: false,\n        track: true\n      }\n    }\n    this.reshowForm = this.reshowForm.bind(this)\n  }\n\n  handleSearchInput = (event) => {\n    this.setState({\n      ...this.state,\n      search: {\n        ...this.state.search,\n        text: event.target.value\n      }\n    })\n  }\n\n  handleTypeSelect = (event) => {\n    this.setState({\n      ...this.state,\n      search: {\n        ...this.state.search,\n        type: event.target.innerHTML.toLowerCase()\n      },\n      buttons: {\n        [event.target.name]: !this.state.buttons[event.target.name]\n      }\n    })\n    this.props.saveCategory(event.target.name)\n  }\n\n  showAlert = () => {\n    return (\n      <Alert bsStyle=\"warning\">\n        Oops, you missed something\n      </Alert>\n    )\n  }\n\n  setAlert = () => {\n    this.setState({\n      showAlert: true\n    })\n  }\n\n  returnTypes() {\n    return ['Artist', 'Track'];\n  }\n\n  showForm = () => {\n    return(\n      <>\n        <form>\n          <div className=\"btn-group\">\n            <button type=\"button\" name=\"artist\"\n              className={this.state.buttons.artist ? 'btn btn-default' + ' clicked' : 'btn btn-default'}\n              onClick={this.handleTypeSelect}>Artist</button>\n            <button type=\"button\" name=\"track\"\n              className={this.state.buttons.track ? 'btn btn-default' + ' clicked' : 'btn btn-default'}\n              onClick={this.handleTypeSelect}>Track</button>\n          </div>\n          {this.state.showAlert ? this.showAlert() : null}\n          <div className=\"search-input\">\n            <input type=\"text\"\n              value={this.searchText}\n              placeholder=\"Your artist or song\"\n              onChange={this.handleSearchInput} />\n          </div>\n        </form>\n      </>\n    )\n  }\n\n  reshowForm = () => {\n    this.setState({\n      showForm: true\n    })\n  }\n\n  showResult = () => {\n    return(\n      <Criteria searchData={this.state.search}\n      reshowForm={this.reshowForm}/>\n    )\n  }\n\n  render() {\n    let renderSearchResult;\n    if (this.state.search.text !== \"\" && this.state.search.type !== \"\") {\n      renderSearchResult = this.showResult()\n    } else {\n      renderSearchResult = null;\n    }\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"page-header\">\n          <h4>First, tell us your song or artist</h4>\n        </div>\n        {this.showForm()}\n        {renderSearchResult}\n        <Row>\n          <button className=\"get-song-button\" onClick={this.props.getProfile}>\n            <Link to=\"/recommend\">Get My Song</Link>\n          </button>\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveCategory: (category) => dispatch(saveCategory(category))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SearchContainer)\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav, NavItem } from 'react-bootstrap'\n\nconst MusicNavbar = ({profileID}) =>\n  <Navbar inverse collapseOnSelect>\n  <Navbar.Header>\n    <Navbar.Brand>\n      <Link to='/'>MusicBot</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle />\n  </Navbar.Header>\n  <Navbar.Collapse>\n    <Nav>\n      <NavItem eventKey={1} >\n        <Link to={`/profiles/${profileID}`}>My Profile</Link>\n      </NavItem>\n      <NavItem eventKey={1} >\n        <Link to={`/start`}>Explore music</Link>\n      </NavItem>\n      <NavItem eventKey={2} href=\"#\">\n        Connect to Spotify\n      </NavItem>\n    </Nav>\n    <Nav pullRight>\n      <NavItem eventKey={1} href=\"#\">\n        About Me\n      </NavItem>\n    </Nav>\n  </Navbar.Collapse>\n  </Navbar>;\n\nexport default MusicNavbar;\n","function profileAction(profileID) {\n  return {\n    type: 'createProfile',\n    profileID: profileID\n  }\n}\n\nexport function receiveError(error) {\n  return {\n    type: 'error',\n    error: error\n  }\n}\n\nfunction getRec(rec) {\n  return {\n    type: 'getRec',\n    recommendation: rec\n  }\n}\n\nfunction saveRecAction(rec) {\n  return {\n    type: 'saveRec',\n    trackID: rec.trackID\n  }\n}\n\nfunction signInAction(jsonResp) {\n  return {\n    type: 'signIn',\n    name: jsonResp.name,\n    likes: jsonResp.likes\n  }\n}\n\nexport function saveProfileInfo(name, email) {\n  return {\n    type: 'saveName',\n    name: name,\n    email: email\n  }\n}\n\n//create profile and save profile ID to state\nexport function createProfile(trackIDs, artistIDs) {\n  const fetchData = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(\n      {\n        tracks: trackIDs.join('%20'),\n        artists: artistIDs.join('%20'),\n      }\n    )\n  }\n  return function(dispatch) {\n    fetch(`/api/profiles`, fetchData).then(resp => resp.json())\n    .then(json => dispatch(profileAction(json.id))).catch(\n      error => dispatch(receiveError(error)))\n  }\n}\n\n//persist the likes data (type and spotify id) to state\nexport function saveLike(trackSpotifyID, profileID) {\n  const fetchData = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({spotifyID: trackSpotifyID})\n  }\n  return function(dispatch) {\n    fetch(`/api/profiles/${profileID}/likes`, fetchData)\n  }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { FormGroup, FormControl, Form, ControlLabel, Button } from 'react-bootstrap'\n\nexport default class ProfileForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: ''\n    }\n  }\n\n  handleSubmit = () => {\n    const name = this.state.name\n    const email = this.state.email\n    this.props.submit(name, email)\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    const profileID = this.props.profileID;\n    return (\n      <>\n        <button onClick={this.spotifyAuth}>\n          Connect with Spotify</button>\n        <Form inline>\n          <FormGroup controlId=\"formInlineName\">\n            <ControlLabel>Name</ControlLabel>{' '}\n            <FormControl name=\"name\"\n              type=\"text\" placeholder=\"Jane Doe\"\n              value={this.state.name} onChange={this.handleChange}/>\n          </FormGroup>{' '}\n          <FormGroup controlId=\"formInlineEmail\">\n            <ControlLabel>Email</ControlLabel>{' '}\n            <FormControl name=\"email\"\n              type=\"email\" placeholder=\"jane.doe@example.com\"\n              value={this.state.email} onChange={this.handleChange} />\n          </FormGroup>{' '}\n          <Button type=\"submit\" onClick={this.handleSubmit}>\n            <Link to={`/profiles/${profileID}`} onClick={this.handleSubmit}>\n              See My Profile</Link></Button>\n        </Form>\n      </>\n    )\n  }\n}\n","import React from 'react';\nimport { Button, Glyphicon, ButtonGroup } from 'react-bootstrap'\n\nfunction Like(props) {\n  return (\n    <div className=\"button-container\">\n      <Button onClick={props.saveLike} bsSize=\"large\">\n        <Glyphicon glyph=\"thumbs-up\" /> Save to my Profile\n      </Button>\n    </div>\n  )\n}\n\nexport default Like;\n","import React from 'react';\nimport { Button, Glyphicon, ButtonGroup } from 'react-bootstrap'\n\nfunction Playback(props) {\n  return (\n    <div className=\"button-container\">\n      <Button onClick={props.showPreviousTrack} bsSize=\"medium\">\n        <Glyphicon glyph=\"backward\" /> Previous Song\n      </Button>\n      <Button onClick={props.showNextTrack} bsSize=\"medium\">\n        <Glyphicon glyph=\"forward\" /> Next Song\n      </Button>\n    </div>\n  )\n}\n\nexport default Playback;\n","import React from 'react';\nimport { Col } from 'react-bootstrap'\nimport Like from '../presentation/Like'\nimport Playback from '../presentation/Playback'\nimport '../css/Rec.css'\n\nconst Recommendation = ({rec, showNextTrack, showPreviousTrack, saveLike, iframeSRC}) => (\n  <div className=\"rec-container\">\n    <div className=\"rec-info\">\n      <p>{rec.name}</p>\n      <p>Popularity: {rec.popularity}</p>\n      <p>Artist: {rec.artists[0]['name']}</p>\n    </div>\n    <div className=\"rec-player\">\n      <Playback showNextTrack={showNextTrack} showPreviousTrack={showPreviousTrack}/>\n      <iframe src={iframeSRC}\n        width='300' height='300' frameBorder='0'\n        allowTransparency='true' allow='encrypted-media'>\n      </iframe>\n    </div>\n    <div className=\"rec-form\">\n      <Like saveLike={saveLike} />\n    </div>\n  </div>\n)\n\nexport default Recommendation;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { receiveError, saveLike, saveProfileInfo } from '../actions/ProfileActions'\nimport ProfileForm from '../presentation/ProfileForm'\nimport Recommendation from '../presentation/Recommendation'\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showRec: false,\n      rec: {},\n      showForm: false,\n      loggedIn: false,\n      recIndex: 0\n    }\n  }\n\n  //show result based on state\n  showResult = () => {\n    const rec = this.state.rec[this.state.recIndex]\n    let iframeID;\n    if(rec) {iframeID = rec.uri.split(':')[2]}\n    const iframeSRC = `https://open.spotify.com/embed/track/${iframeID}`\n    return (\n      <Recommendation rec={rec} showNextTrack={this.showNextTrack}\n        showPreviousTrack={this.showPreviousTrack}\n        saveLike={this.saveLike} iframeSRC={iframeSRC} />\n    )\n  }\n\n  //increase recIndex or fetch more recommendations\n  showNextTrack = () => {\n    if(this.state.recIndex < 9) {\n      this.setState({\n        recIndex: this.state.recIndex + 1\n      })\n    } else {\n      this.fetchRecommend()\n    }\n  }\n\n  //decrease recIndex\n  showPreviousTrack = () => {\n    if(this.state.recIndex > 0) {\n      this.setState({\n        recIndex: this.state.recIndex - 1\n      })\n    }\n  }\n\n  //calls showResult()\n  handleFetch = (json) => {\n    this.setState({\n      showRec: true,\n      rec: json\n    });\n  }\n\n  //after like button is clicked, save the liked track to db and associate it with the profile\n  saveLike = () => {\n    const trackSpotifyID = this.state.rec[this.state.recIndex].id\n    this.props.like(trackSpotifyID, this.props.profile.profileID)\n    if(!this.props.loggedIn) {\n      this.setState({\n        showForm: true\n      })\n    }\n  }\n\n  fetchRecommend = () => {\n    fetch(`/api/profiles/${this.props.profile.profileID}/recommendations`,\n    {method: 'POST'})\n    .then(resp => resp.json())\n    .then(json => this.handleFetch(json)).catch(\n      error => this.props.error(error))\n  }\n\n  submitSignIn = (name, email) => {\n    this.props.saveProfile(name, email)\n    this.setState({\n      showForm: false,\n      loggedIn: true\n    })\n  }\n\n  //get profile recommendation after component mounts\n  //change state's showRec to true after profile is created\n  //save recommended track to db\n  componentDidMount() {\n    this.fetchRecommend();\n  }\n\n\n  render() {\n    let profile;\n    let profileID = this.props.profile.profileID\n    if(this.state.showForm && !this.state.loggedIn) {\n      profile = <ProfileForm submit={this.submitSignIn} profileID={profileID}/>\n    } else {\n      profile = null\n    }\n    return (\n      <React.Fragment>\n        <h4>Your tracks based on {this.props.searchResults.name}:</h4>\n        {this.state.showRec ? this.showResult() : null}\n        {profile}\n      </React.Fragment>\n    )\n  }\n}\n//end of profile class\n\nconst mapStateToProps = (state) => {\n  return {\n    searchResults: state.searchResults,\n    profile: state.profile,\n    loggedIn: state.profileInfo.loggedIn\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    error: (error) => dispatch(receiveError(error)),\n    like: (trackID, profileID) => dispatch(saveLike(trackID, profileID)),\n    saveProfile: (name, email) => dispatch(saveProfileInfo(name, email))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\n","import React from 'react';\nimport { Jumbotron, Row } from 'react-bootstrap'\nimport Profile from '../container/Profile'\n\nfunction ProfileContainer (props) {\n  return (\n    <React.Fragment>\n      <Row>\n        {props.profile ?\n          <Jumbotron><Profile /></Jumbotron> : null}\n      </Row>\n    </React.Fragment>\n  )\n}\n\nexport default ProfileContainer\n","import React from 'react';\nimport { Jumbotron, Button } from 'react-bootstrap'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport '../css/welcome.css'\n\nconst Welcome = () => {\n  return (\n    <div className=\"welcome-box\">\n      <h1>This is MusicBot</h1>\n      <p>\n        Based on your favorite artist or song, it tells you what to listen to next.\n      </p>\n      <button className=\"start-button\">\n        <Link to=\"/start\">Get Started</Link>\n      </button>\n    </div>\n  )\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass ProfilePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedIn: false,\n      tracks: []\n    }\n  }\n\n  componentDidMount() {\n    const profileID = this.props.profile.profileID\n    const name = this.props.profileName.name;\n    const email = this.props.profileName.email;\n    const data = {\n      method: 'PATCH',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        name: name,\n        email: email\n      })\n    }\n    fetch(`/api/profiles/${profileID}/signin`, data)\n    .then(resp => resp.json())\n    .then(json => this.setState({\n      tracks: json,\n      loggedIn: true\n    }))\n    //update store signIn status\n    this.props.signIn();\n  }\n\n  render() {\n    let name, tracks = [];\n    debugger;\n    if(this.state.loggedIn) {\n      name = this.props.profileName.name\n      tracks = this.state.tracks\n    }\n    return (\n      <>\n        <div className=\"page-header\">\n          <h2>Hello {name}</h2>\n          <p>Your likes: </p>\n        </div>\n        <div className=\"list-group\">\n          {tracks.map(track =>\n              <a className=\"list-group-item\" href={track.spotify_url}\n                key={track.id}>\n                {track.name}\n              </a>\n          )}\n        </div>\n        <button className=\"btn btn-primary\">\n          <Link to=\"/start\">Back to browsing</Link>\n        </button>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    profile: state.profile,\n    profileInfo: state.profileInfo,\n    profileName: state.profileName\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: () => dispatch({type: 'signIn'})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Button, Grid, Row, Col } from 'react-bootstrap'\nimport SearchContainer from './SearchContainer'\nimport Navbar from '../presentation/Navbar'\nimport ProfileContainer from '../presentation/ProfileContainer'\nimport Welcome from '../presentation/WelcomePanel'\nimport { createProfile } from '../actions/ProfileActions'\nimport '../css/App.css'\nimport ProfilePage from './ProfilePage'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      renderSearch: true\n    }\n  }\n\n  getProfile = () => {\n    const result = this.props.searchResults\n    var trackIDs = []\n    var artistIDs = []\n    var keyword = this.props.searchCategory\n    if(keyword === 'track') {\n      var track = result\n      trackIDs.push(track.id)\n    } else if (keyword === 'artist') {\n      var artist = result\n      artistIDs.push(artist.id)\n    }\n    //if signed in, add new like to profile and get rec\n    //if not, create new profile in db and get profile ID\n    this.props.createProfile(trackIDs, artistIDs);\n  }\n\n  render() {\n    let profileID;\n    if (this.props.profile.showProfile) {\n      profileID = this.props.profile.profileID\n    } else {\n      profileID = \"\"\n    }\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar profileID={this.props.profile.profileID} />\n          <Route exact path=\"/\" render={Welcome} />\n          <div className=\"container-fluid\">\n            <Route exact path=\"/start\" render={\n                routeProps => <SearchContainer {...routeProps}\n                getProfile={this.getProfile} />}/>\n            <Route exact path=\"/recommend\" render={routeProps =>\n                <ProfileContainer {...routeProps}\n                profile={this.props.profile.showProfile} />} />\n            <Route exact path={`/profiles/${profileID}`}\n              render={routeProps => <ProfilePage {...routeProps} />} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    searchResults: state.searchResults,\n    profile: state.profile,\n    profileInfo: state.profileInfo,\n    searchCategory: state.searchCategory\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProfile: (trackIDs, artistIDs) => dispatch(\n      createProfile(trackIDs, artistIDs)),\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport reducers from './reducers/reducers.js'\nimport thunkMiddleware from 'redux-thunk'\n\nimport './css/index.css';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(thunkMiddleware)\n);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}